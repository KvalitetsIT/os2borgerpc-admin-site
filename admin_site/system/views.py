# Create your views here.

from django.http import HttpResponse, Http404
from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required

from account.models import UserProfile

from models import Site


@login_required
def index(request):
    user = request.user
    profile = user.get_profile()

    if profile.type == UserProfile.SUPER_ADMIN:
        # Redirect to list of sites
        return redirect('/sites/')
    else:
        # User belongs to one site only; redirect to that site
        site_url = profile.site.uid.lower()
        return redirect('site/{0}/'.format(site_url))


@login_required
def sites_overview(request):
    # TODO: Load site list into context and pass to render
    return render(request, 'system/sites.html')


simple_context = lambda s: {'site': s.name, 'site_url': s.uid.lower()}


def site_view(template, get_context=simple_context):
    """Return a function which will generate a site view and render it with
    "template" and use "processor" to add context as necessary."""
    @login_required
    def _site_view(request, site_uid):
        uid = site_uid.upper()
        try:
            site = Site.objects.get(uid=uid)
        except Site.NotFound:
            raise Http404
        context = get_context(site)
        return render(request, template, context)

    return _site_view


# Now follows all site-based views as generated by the _site_view_ function.
# TODO: Define get_context functions as needed.

site = site_view('system/site_overview.html')
configuration = site_view('system/site_configuration.html')
computers = site_view('system/site_computers.html')
groups = site_view('system/site_groups.html')
jobs = site_view('system/site_jobs.html')
scripts = site_view('system/site_scripts.html')
users = site_view('system/site_users.html')
