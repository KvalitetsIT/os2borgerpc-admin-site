This directory contains the BibOS Admin system, which is a remote
administration system for Debian-based GNU/Linux-systems, especially
Ubuntu systems.

The system is developed for a number of public libraries in Denmark and
was specifically designed to manage their BibOS systems for audience PC.
Its functionality aims to be similar to that of Canonical's Landscape
product, but less ambitious.

The system was prepared by Magenta Aps: See http://www.magenta-aps.dk

All code is made available under Version 3 of the GNU General Public
License - see the LICENSE and COPYRIGHT files for details.



HOWTO SETUP DEVELOPMENT SERVER
=============================+

This guide describes how to get the admin site up and running for
development purposes, i.e. with no Apache or proxy setup. If you wish
to set up a production environment, please follow the instructions in
doc/HOWTO_INSTALL_SERVER.txt. If you wish to learn to use the system, please
install server and use the on-site documentation.


You should normally be able to  install the development server in  10 minutes 
or less. An Internet connection is required.



PRE-REQUISITES
++++++++++++++

Python 2.7
SQLite 3
python-virtualenv
git

Get them with apt-get install or by whatever means necessary for your platform.


GRAB THE CODE
+++++++++++++

git clone https://github.com/magenta-aps/bibos_admin.git


GET THE RIGHT BRANCH
++++++++++++++++++++

cd bibos_admin
git checkout <development>

This only applies if you're not working directly on the master branch (which
you probably shouldn't). For <development> substitute the branch you want to 
work on.


INSTALL DJANGO AND OTHER COMPONENTS
+++++++++++++++++++++++++++++++++++

cd admin_site

scripts/install.sh

This requires an Internet connection. It should run its course with a number of
warnings but no errors.


SOFT-LINK THE SETTINGS FILE
+++++++++++++++++++++++++++

pushd bibos_admin/
ln -s settings_development.py settings.py
popd

This gives you the development settings. Most importantly, this features an
SQLite database.


RUN THE TEST SUITE
++++++++++++++++++

source bin/virtualenv  # To set up paths for Django etc.

python manage.py test

This is maninly a sanity check. The test should always pass.


CREATE THE DATABASE
+++++++++++++++++++

python manage.py syncdb

Answer "yes" when prompted to create a superuser and enter details.


RUN THE SERVER
++++++++++++++

python manage.py runserver 8080

"8080" is just an example, you can run it on whatever port you prefer.


PATCH THE USER
++++++++++++++

Log on to the admin site's user section:

http://localhost:8080/admin/auth/user/

Edit the user you just created. Scroll to the bottom of the screen and choose
"Super admin" as the user profile type.



ENJOY
+++++

Go to http://localhost:8080 to start using the system - create sites, create
groups, etc.

NOTE: The system was written in Django and consists of a Django site with three
apps: "account", "system" and "job". Most of the actual functionality is
concentrated in the "system" and "job" apps. Some knowledge of Django is
required to understand how the system is designed. Refer to the graphical
object model (BibOS.dia) for an explanation of the site's object structure.


CLIENT STUFF
++++++++++++

You can make a source distribution for the bibos_client package located in the
root of the bibos_admin source tree; this is what you should use to register
new computers in the admin system.



